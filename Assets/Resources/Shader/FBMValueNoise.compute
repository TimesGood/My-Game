// NoiseGenerator.compute
#pragma kernel CSMain

#include "Include/Noise.hlsl"

RWTexture2D<float4> NoiseTexture;
float Frequency;
float Threshold;
float Scale;
uint Width;
uint Height;
int Octaves;
float Persistence;
float Lacunarity;
int Seed;
bool IsBinary;
float Offset;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

    float noiseValue = FBMValueNoise(
        id.xy + float2(Offset, Offset),
        Frequency,
        Octaves,
        Persistence,
        Lacunarity,
        Scale,
        Width,
        Height,
        Seed
    );
    float4 color;
    if(IsBinary) {
        color = (noiseValue > Threshold) ? float4(1,1,1,1) : float4(0,0,0,1);
    } else {
        color = (noiseValue > Threshold) ? float4(noiseValue,noiseValue,noiseValue,1) : float4(0,0,0,1);
    }

    NoiseTexture[id.xy] = color;
}
